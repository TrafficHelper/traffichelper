Functionality:


To access the features of the backend, the user must setup the CLI. The following activities may be held:
- Making a sequence of changes to the traffic network with the option to refactor traffic flows accordingly
    - It consists of either completely adding or removing a segment, or adding a particular series of segments and then removing another series
    - A stack trace is then completed and returned to mark which of the gadgets were successfully added or not; this occurs, for example, when there aren't any gadgets to remove
    - As long as the user knows the edge segment on which gadgets are being added to, it is possible to complete any valid sequence, even if the removals are to be interleaved with the additions
    - This is accomplished in the optimal manner by "chaining" together a series of additions or removals ONLY in a call, in the desired sequence
    - The refactoring obeys the following properties (analogous to Kirchoff's laws):
        - Conservation of flow: The total amount of flow on a traffic network cannot dependend on traffic additions or removals - practically all individuals need to get to work, regardless of the traffic system (an impetus for our project)
        - Reversibility: While this is not necessarily the case as commuters may adopt new habits despite a network reversion, any modification policy requires that the traffic state - the flows, times, distances and risks - must revert too to the previous state
        - Reasonability: Each

The backend consists of three core facilities:
- Modifying the traffic network with the option to refactor traffic flows
- Finding optimal paths along the entire traffic network
-